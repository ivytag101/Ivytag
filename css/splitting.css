/* Recommended styles for Splitting */
.splitting .word,
.splitting .char {
    display: inline-block;
}

/* Psuedo-element chars */
.splitting .char {
    position: relative;
}

/**
 * Populate the psuedo elements with the character to allow for expanded effects
 * Set to `display: none` by default; just add `display: block` when you want
 * to use the psuedo elements
 */
.splitting .char::before,
.splitting .char::after {
    content: attr(data-char);
    position: absolute;
    top: 0;
    left: 0;
    visibility: hidden;
    transition: inherit;
    -webkit-user-select: none;
    user-select: none;
}

/* Expanded CSS Variables */

.splitting {
    /* The center word index */
    --word-center: calc((var(--word-total) - 1) / 2);

    /* The center character index */
    --char-center: calc((var(--char-total) - 1) / 2);

    /* The center character index */
    --line-center: calc((var(--line-total) - 1) / 2);
}

.splitting .word {
    /* Pecent (0-1) of the word's position */
    --word-percent: calc(var(--word-index) / var(--word-total));

    /* Pecent (0-1) of the line's position */
    --line-percent: calc(var(--line-index) / var(--line-total));
}

.splitting .char {
    /* Percent (0-1) of the char's position */
    --char-percent: calc(var(--char-index) / var(--char-total));

    /* Offset from center, positive & negative */
    --char-offset: calc(var(--char-index) - var(--char-center));

    /* Absolute distance from center, only positive */
    --distance: calc((var(--char-offset) * var(--char-offset)) / var(--char-center));

    /* Distance from center where -1 is the far left, 0 is center, 1 is far right */
    --distance-sine: calc(var(--char-offset) / var(--char-center));

    /* Distance from center where 1 is far left/far right, 0 is center */
    --distance-percent: calc((var(--distance) / var(--char-center)));
}

/* Define animation container */
.logos-anim {
    
    flex-direction: row;
    position: relative;
    margin: 0 10px ; /* Add margin at the bottom */
    
}

.logos-img {
    top: 0;
    left: 0;
    align-content: flex-start;
    overflow-x: hidden;
    animation: smoothie 30s infinite;
  }
 
.logos-img> img {
    display: inline-block; /* Display as inline block */
    width: auto;
    height: 100px;
    margin-right: 10px;
}

@media only screen and (max-width: 768px) {
    .logos-img> img {
        width: 40px;
        height: 30px;
        margin-right: 10px;
    }


    .logos-anim {
        display: inline-flex; /* Display as inline flex */
        flex-direction: row;
        position: relative;
        width: fit-content;
        align-conten: flex-start;
    }
    
}
*{transition: .2s}
  /*Define Smoothie animation*/
  @keyframes smoothie {
      0% {
        left: -103%;
      }
      10% {
        left: -5%;
      }
      60% {
        left: 40%;
      }
     100% {
      left: 103%;
      
    }
  }

  /*devicon*/
  
   
   .icon-container {
    animation: fadeIn 2s ease-in-out infinite alternate;
   }
   
   @keyframes fadeIn {
     0% {
       opacity: 0.2;
    }
     100% {
       opacity: 1;
    }
   }

  .icon-container2 {
    animation: fadeIn 2s ease-in-out infinite alternate;
    animation-delay: 1s;
  }
  .icon-container3 {
    animation: fadeIn 2s ease-in-out infinite alternate;
    animation-delay: 2s;
  }
  .icon-container4 {
    animation: fadeIn 2s ease-in-out infinite alternate;
    animation-delay: 3s;
  }
  .icon-container5 {
    animation: fadeIn 2s ease-in-out infinite alternate;
    animation-delay: 4s;
  }
  .icon-container6 {
    animation: fadeIn 2s ease-in-out infinite alternate;
    animation-delay: 5s;
  }
  .icon-container7 {
    animation: fadeIn 2s ease-in-out infinite alternate;
    animation-delay: 6s;
  }
  .icon-container8 {
    animation: fadeIn 2s ease-in-out infinite alternate;
    animation-delay: 7s;
  }
  .icon-container9 {
    animation: fadeIn 2s ease-in-out infinite alternate;
    animation-delay: 8s;
  }
  .icon-container10 {
    animation: fadeIn 2s ease-in-out infinite alternate;
    animation-delay: 9s;
  }
  .icon-container11 {
    animation: fadeIn 2s ease-in-out infinite alternate;
    animation-delay: 10s;
  }